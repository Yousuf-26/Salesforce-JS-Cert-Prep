JS concepts for review

1. Object.assign()
const target = { a: 1, b: 2 };
const source = { b: 4, c: 5 };
const sourceOne = { b:5,d: 4, e: 5 };

//SALESFORCE JS - I
https://github.com/Yousuf-26/Salesforce-JS-Cert-Prep.git


1.const returnedTarget = Object.assign(target, source,sourceOne);

console.log(target);
Object { a: 1, b: 5, c: 5, d: 4, e: 5 }


2. Object.prototype.hasOwnProperty()

const object1 = {};
object1.property1 = 42;

console.log(object1.hasOwnProperty('property1'));
// Expected output: true

console.log(object1.hasOwnProperty('toString'));
// Expected output: false

console.log(object1.hasOwnProperty('hasOwnProperty'));
// Expected output: false

3. Array.prototype.reduce()

const array1 = [1, 2, 3, 4];

// 0 + 1 + 2 + 3 + 4
const initialValue = 0;
const sumWithInitial = array1.reduce(
  (accumulator, currentValue) => accumulator + currentValue,
  initialValue,
);

console.log(sumWithInitial);
// Expected output: 10


4. double bang

// good
const hasAge = Boolean(age);

// best
const hasAge = !!age;

5.Object.create()
The Object.create() static method creates a new object, using an existing object as the prototype of the newly created object.

5. Object.prototype(newobject)

var b = {};
console.log(Object.getPrototypeOf(b))

6.Prototype Inheritance

7..call(), .apply() and .bind()

